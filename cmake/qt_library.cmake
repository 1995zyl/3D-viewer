
macro(include_qt_library)
    set(QT_PATH ${PROJECT_SOURCE_DIR}/third_library/qt-6.5.2/msvc2019_64)
    include_directories(${QT_PATH}/include)
    include_directories(${QT_PATH}/include/QtCore)
    include_directories(${QT_PATH}/include/QtGui)
    include_directories(${QT_PATH}/include/QtWidgets)
    include_directories(${QT_PATH}/include/QtOpenGLWidgets)
    include_directories(${QT_PATH}/include/QtOpenGL)
    include_directories(${QT_PATH}/include/QtQml)
    include_directories(${QT_PATH}/include/QtQmlIntegration)
    include_directories(${QT_PATH}/include/QtQuick)
endmacro()

macro(execute_qt_moc origin_dir replace_dir ${moc_path})
    foreach(H_FILE ${moc_path})
        STRING(FIND ${H_FILE} "_p.h" pos)
        if (pos EQUAL -1)
            STRING(FIND ${H_FILE} "ui_" pos)
            if (pos EQUAL -1)
                set(H_FILE_R ${H_FILE})
                string(REPLACE "/${origin_dir}/" "/${replace_dir}/moc_" H_FILE_R ${H_FILE_R})
                string(REPLACE ".h" ".cpp" H_FILE_R ${H_FILE_R})
                execute_process(COMMAND moc ${H_FILE} -o ${H_FILE_R} WORKING_DIRECTORY ${QT_PATH}/bin)
            endif ()
        endif ()
    endforeach()
endmacro()

macro(execute_qt_uic origin_dir replace_dir ${uic_path})
    foreach(UI_FILE ${uic_path})
        set(H_FILE ${UI_FILE})
        string(REPLACE "/${origin_dir}/" "/${replace_dir}/ui_" H_FILE ${H_FILE})
        string(REPLACE ".ui" ".h" H_FILE ${H_FILE})
        execute_process(COMMAND uic ${UI_FILE} -o ${H_FILE} WORKING_DIRECTORY ${QT_PATH}/bin)
    endforeach()
endmacro()

macro(execute_qt_rcc origin_dir replace_dir ${rcc_path})
    foreach(RCC_FILE ${rcc_path})
        set(H_FILE ${RCC_FILE})
        string(REPLACE "/${origin_dir}/" "/${replace_dir}/qrc_" H_FILE ${H_FILE})
        string(REPLACE ".qrc" ".cpp" H_FILE ${H_FILE})
        execute_process(COMMAND rcc ${RCC_FILE} -o ${H_FILE} WORKING_DIRECTORY ${QT_PATH}/bin)
    endforeach()
endmacro()

macro(execute_qt_translate replace_dir ${translate_path})
    # file(REMOVE ${CMAKE_CURRENT_SOURCE_DIR}/source/ZH_CN.ts)
    execute_process(COMMAND lupdate ${translate_path} -ts ${replace_dir} WORKING_DIRECTORY ${QT_PATH}/bin)
    set(QM_FILE ${replace_dir})
    string(REPLACE ".ts" ".qm" QM_FILE ${QM_FILE})
    execute_process(COMMAND lrelease ${replace_dir} -qm ${QM_FILE} WORKING_DIRECTORY ${QT_PATH}/bin)
endmacro()
